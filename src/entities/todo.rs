//! `SeaORM` Entity, @generated by sea-orm-codegen 1.0.1

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

use crate::todos::dtos::todo_dto::TodoDto;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "todo")]
pub struct Model {
    #[sea_orm(primary_key)]
    #[serde(rename = "id")]
    pub task_id: i32,
    #[serde(rename = "taskName")]
    pub task_name: String,
    #[serde(rename = "doneStatus")]
    pub done_status: bool,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}

impl Into<TodoDto> for Model {
    fn into(self) -> TodoDto {
        TodoDto {
            task_id: self.task_id,
            task_name: self.task_name,
            done_status: self.done_status,
        }
    }
}
